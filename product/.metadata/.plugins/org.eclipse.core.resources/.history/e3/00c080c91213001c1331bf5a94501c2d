package com.murat.smartiq.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.murat.smartiq.model.Category;
import com.murat.smartiq.repository.ICategoryRepository;
import com.murat.smartiq.service.ICategoryService;

@RestController
public class CategoryController implements ICategoryService {

	@Autowired
	ICategoryRepository categoryRepo;

	/**
	 * creating new category
	 */
	@Override
	public ResponseEntity<Void> addCategory(Category category) {
		categoryRepo.save(category);
		return new ResponseEntity<Void>(HttpStatus.OK);
	}

	/**
	 * update exist category
	 */
	@Override
	public ResponseEntity<Void> updateCategory(Category category) {
		// if (categoryRepo.isCategoryExist(category)) {
		// categoryRepo.updateCategory(category);
		return new ResponseEntity<Void>(HttpStatus.OK);
		// }

		// return new ResponseEntity<Void>(HttpStatus.NOT_MODIFIED);
	}

	@Override
	public ResponseEntity<Category> removeCategory(@PathVariable("shrt_code") String shrt_code) {
		Optional<Category> category = categoryRepo.getCategoryByShortCode(shrt_code);
		if(category!=null) {
			categoryRepo.deleteById(category.get().getCategoryId());
			return new ResponseEntity<Void>(HttpStatus.NO_CONTENT);
		}
		
		return new ResponseEntity<Void>(HttpStatus.NOT_FOUND);
		
	}

	@Override
	public List<Category> allCategories() {
		return categoryRepo.findAll();
	}

	@Override
	public ResponseEntity<Category> getCategoryById(@PathVariable("categoryId") String categoryId) {
		return categoryRepo.findById(categoryId).map(category -> ResponseEntity.ok().body(category))
				.orElse(ResponseEntity.notFound().build());
	}

}
